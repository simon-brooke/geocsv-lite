["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$window",["^ ","~$location",["^ ","~$search",["^ "]]],"~$Papa",["^ ","~$parse",["^ "]]],"~:use-macros",["^ ","~$go","~$cljs.core.async.macros"],"~:excludes",["~#set",[]],"~:name","~$geocsv-lite.data","~:imports",null,"~:requires",["^ ","~$dom","~$clojure.browser.dom","~$cljs-http.client","^C","^B","^B","~$cljs.core.async","^D","~$gis","~$geocsv-lite.gis","~$n","~$geocsv-lite.notify","~$cs","~$clojure.string","~$geocsv-lite.map","^J","^G","^G","^I","^I","^F","^F","~$http","^C"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$<!","^D","~$get-view","^J"],"~:defs",["^ ","~$get-query-part-as-map",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/simon/workspace/geocsv-lite/src/geocsv_lite/data.cljs","~:line",13,"~:column",7,"~:end-line",13,"~:end-column",28,"~:arglists",["~#list",["~$quote",["^Z",[[]]]]],"~:doc","Returns the query part of the current document URL as a keyword-string map."],"^=","~$geocsv-lite.data/get-query-part-as-map","^T","/home/simon/workspace/geocsv-lite/src/geocsv_lite/data.cljs","^X",28,"~:method-params",["^Z",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^Z",[null,null]],"^V",1,"~:variadic?",false,"^U",13,"~:ret-tag",["^<",["~$clj","~$clj-nil"]],"^W",13,"~:max-fixed-arity",0,"~:fn-var",true,"^Y",["^Z",["^[",["^Z",[[]]]]],"^10","Returns the query part of the current document URL as a keyword-string map."],"~$get-csv-url",["^ ","^R",null,"^S",["^ ","^T","/home/simon/workspace/geocsv-lite/src/geocsv_lite/data.cljs","^U",22,"^V",7,"^W",22,"^X",18,"^Y",["^Z",["^[",["^Z",[["~$query"]]]]],"^10","~`query` is expected a keyword-string map which may have keys:\n\n  * `:docid` whose value is a Google Sheets document id;\n  * `:uri` whose value is the URI of a JSON or CSV file.\n\n  If either of these keys is found, returns an appropriate URL, else nil."],"^=","~$geocsv-lite.data/get-csv-url","^T","/home/simon/workspace/geocsv-lite/src/geocsv_lite/data.cljs","^X",18,"^12",["^Z",[["^1<"]]],"^13",null,"^14",["^Z",[null,null]],"^V",1,"^15",false,"^U",22,"^16",["^<",["~$any","~$string","^18"]],"^W",22,"^19",1,"^1:",true,"^Y",["^Z",["^[",["^Z",[["^1<"]]]]],"^10","~`query` is expected a keyword-string map which may have keys:\n\n  * `:docid` whose value is a Google Sheets document id;\n  * `:uri` whose value is the URI of a JSON or CSV file.\n\n  If either of these keys is found, returns an appropriate URL, else nil."],"~$prepare-records",["^ ","^R",null,"^S",["^ ","^T","/home/simon/workspace/geocsv-lite/src/geocsv_lite/data.cljs","^U",40,"^V",7,"^W",40,"^X",22,"^Y",["^Z",["^[",["^Z",[["~$data"]]]]],"^10","~`data` is expected to be a vector of vectors, where the first vector\n  contains column headers and the remaining vectors contain records.\n  Return this as a vector of maps, with each map having keys taken from\n  the first vector and values taken from one of the subsequent vectors."],"^=","~$geocsv-lite.data/prepare-records","^T","/home/simon/workspace/geocsv-lite/src/geocsv_lite/data.cljs","^X",22,"^12",["^Z",[["^1A"]]],"^13",null,"^14",["^Z",[null,null]],"^V",1,"^15",false,"^U",40,"^16","~$cljs.core/LazySeq","^W",40,"^19",1,"^1:",true,"^Y",["^Z",["^[",["^Z",[["^1A"]]]]],"^10","~`data` is expected to be a vector of vectors, where the first vector\n  contains column headers and the remaining vectors contain records.\n  Return this as a vector of maps, with each map having keys taken from\n  the first vector and values taken from one of the subsequent vectors."],"~$default-handler",["^ ","^R",null,"^S",["^ ","^T","/home/simon/workspace/geocsv-lite/src/geocsv_lite/data.cljs","^U",64,"^V",7,"^W",64,"^X",22,"^Y",["^Z",["^[",["^Z",[["~$response","~$k"]]]]],"^10","When data is received from a URL, it is received asynchronously. This\n  is the default callback called with the `response` of the HTTP request,\n  and the keyword `k` identifying the map view, to populate the map with\n  data."],"^=","~$geocsv-lite.data/default-handler","^T","/home/simon/workspace/geocsv-lite/src/geocsv_lite/data.cljs","^X",22,"^12",["^Z",[["^1E","~$k"]]],"^13",null,"^14",["^Z",[null,null]],"^V",1,"^15",false,"^U",64,"^16",["^<",["^1>","^18"]],"^W",64,"^19",2,"^1:",true,"^Y",["^Z",["^[",["^Z",[["^1E","~$k"]]]]],"^10","When data is received from a URL, it is received asynchronously. This\n  is the default callback called with the `response` of the HTTP request,\n  and the keyword `k` identifying the map view, to populate the map with\n  data."],"~$get-data-from-uri",["^ ","^R",null,"^S",["^ ","^T","/home/simon/workspace/geocsv-lite/src/geocsv_lite/data.cljs","^U",83,"^V",7,"^W",83,"^X",24,"^Y",["^Z",["^[",["^Z",[["~$k","~$uri"]]]]],"^10","Get data for the view identified by this keyword `k` from this `uri`."],"^=","~$geocsv-lite.data/get-data-from-uri","^T","/home/simon/workspace/geocsv-lite/src/geocsv_lite/data.cljs","^X",24,"^12",["^Z",[["~$k","^1H"]]],"^13",null,"^14",["^Z",[null,null]],"^V",1,"^15",false,"^U",83,"^16","^1>","^W",83,"^19",2,"^1:",true,"^Y",["^Z",["^[",["^Z",[["~$k","^1H"]]]]],"^10","Get data for the view identified by this keyword `k` from this `uri`."],"~$get-data",["^ ","^R",null,"^S",["^ ","^T","/home/simon/workspace/geocsv-lite/src/geocsv_lite/data.cljs","^U",90,"^V",7,"^W",90,"^X",15,"^Y",["^Z",["^[",["^Z",[["~$k","~$data-source"]]]]],"^10","Get data for the view identified by this keyword `k` from this `data-source`.\n  The data source may be a URL, or a CSV or JSON formatted string."],"^=","~$geocsv-lite.data/get-data","^T","/home/simon/workspace/geocsv-lite/src/geocsv_lite/data.cljs","^X",15,"^12",["^Z",[["~$k","^1K"]]],"^13",null,"^14",["^Z",[null,null]],"^V",1,"^15",false,"^U",90,"^16",["^<",["^1>","^18"]],"^W",90,"^19",2,"^1:",true,"^Y",["^Z",["^[",["^Z",[["~$k","^1K"]]]]],"^10","Get data for the view identified by this keyword `k` from this `data-source`.\n  The data source may be a URL, or a CSV or JSON formatted string."],"~$get-data-with-uri-and-handler",["^ ","^R",null,"^S",["^ ","^T","/home/simon/workspace/geocsv-lite/src/geocsv_lite/data.cljs","^U",117,"^V",7,"^W",117,"^X",36,"^Y",["^Z",["^[",["^Z",[["^1H","~$handler-fn","~$k"]]]]]],"^=","~$geocsv-lite.data/get-data-with-uri-and-handler","^T","/home/simon/workspace/geocsv-lite/src/geocsv_lite/data.cljs","^X",36,"^12",["^Z",[["^1H","^1N","~$k"]]],"^13",null,"^14",["^Z",[null,null]],"^V",1,"^15",false,"^U",117,"^16","^1>","^W",117,"^19",3,"^1:",true,"^Y",["^Z",["^[",["^Z",[["^1H","^1N","~$k"]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^:","^:","^D","^D"],"~:cljs.analyzer/constants",["^ ","~:seen",["^<",["~:errors","~:else","~:recur","~:with-credentials?","~:status","~:uri","~:dynamicTyping","~:body","~:keywordize-keys","~:docid","~:data"]],"~:order",["^21","^1Y","^1X","^1[","^22","^1Z","^20","^1W","^1V","^1U","^1T"]],"^10",null]